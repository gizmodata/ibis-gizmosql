[build-system]
requires = [
  "setuptools>=61.0.0",
  "tomli; python_version < '3.11'",
  "setuptools_scm[toml]>=6.2.0",
]
build-backend = "setuptools.build_meta"

[project]
name = "ibis-sqlflite"
version = "0.0.1"
description = "An Ibis backend for SQLFlite"
dependencies = [
  "duckdb==1.1.0",
  "adbc-driver-flightsql",
  "ibis-framework==9.5",
  "pyarrow",
  "pyarrow-hotfix",
  "numpy",
  "pandas",
  "rich",
]
requires-python = ">=3.9"

[tool.setuptools]
packages = ["ibis_sqlflite"]

[project.entry-points."ibis.backends"]
sqlflite = "ibis_sqlflite"

[project.optional-dependencies]
test = [
  "pytest",
  "pytest-snapshot",
  "pytest-mock",
  "filelock",
  "duckdb",
  "dask",
  "distributed",
  "pins[gcs]",
  "docker"
]

dev = [
  "bumpver"
]

[tool.ruff]
exclude = ["__init__.py"]
respect-gitignore = true
line-length = 90
[tool.ruff.lint]
ignore = ["D202", "D203", "E203", "E741"]
[tool.ruff.lint.isort]
known-first-party = ["ibis"]


[tool.pytest.ini_options]
xfail_strict = true
markers = [
  "backend: tests specific to a backend",
  "benchmark: benchmarks",
  "core: tests that do not required a backend",
  "examples: tests that exercise examples",
  "geospatial: tests for geospatial functionality",
  "xfail_version: backend tests that for a specific version of a dependency",
  "notimpl: We could implement/fix this in ibis, but haven't yet",
  "notyet: This requires upstream to implement/fix something. We can't/won't workaround on the ibis side",
  "never: The backend will never support this / pass this test. Don't bother trying to fix it",
  "bigquery: BigQuery tests",
  "clickhouse: ClickHouse tests",
  "datafusion: Apache Datafusion tests",
  "dask: dask tests",
  "pandas: pandas tests",
  "druid: Apache Druid tests",
  "duckdb: DuckDB tests",
  "exasol: ExasolDB tests",
  "flink: Flink tests",
  "impala: Apache Impala tests",
  "mysql: MySQL tests",
  "mssql: MS SQL Server tests",
  "oracle: Oracle tests",
  "polars: Polars tests",
  "postgres: PostgreSQL tests",
  "risingwave: RisingWave tests",
  "pyspark: PySpark tests",
  "snowflake: Snowflake tests",
  "sqlite: SQLite tests",
  "trino: Trino tests",
  "sqlflite: Sqlflite tests",
  "tpch: TPC-H tests",
  "tpcds: TPC-DS tests",
]
filterwarnings = [
  "ignore:distutils Version classes:DeprecationWarning",
  "ignore:Deprecated call to `pkg_resources:DeprecationWarning",
  "ignore:pkg_resources is deprecated:DeprecationWarning",
]
norecursedirs = ["build", "ci"]

[tool.bumpver]
current_version = "0.0.1"
version_pattern = "MAJOR.MINOR.PATCH[PYTAGNUM]"
commit_message = "bump version {old_version} -> {new_version}"
commit = true
tag = true

[tool.bumpver.file_patterns]
"pyproject.toml" = [
    '^version = "{version}"$',
    '^current_version = "{version}"$',
]
"ibis_sqlflite/__init__.py" = [
    '^__version__ = "{version}"$',
]
